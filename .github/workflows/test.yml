name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Lint with flake8
        run: |
          poetry run pip install flake8
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true

      - name: Check code formatting
        run: |
          poetry run pip install black
          poetry run black --check . || echo "Code formatting issues found"

      - name: Test imports
        run: |
          poetry run python -c "import main; print('✅ Main module imports successfully')"
          poetry run python -c "from flowise_telegram import bot; print('✅ Bot module imports successfully')"

      - name: Validate Dockerfile
        run: |
          docker run --rm -i hadolint/hadolint < Dockerfile || echo "Dockerfile linting completed"
